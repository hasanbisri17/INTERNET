# Dockerfile untuk Production - Internet Management System
# Optimized untuk ukuran dan performa

# Multi-stage build untuk optimasi
FROM php:8.2-cli as composer-stage
WORKDIR /app
COPY composer.json composer.lock ./
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
RUN composer install --no-dev --no-scripts --no-autoloader

FROM node:18-alpine as node-stage
WORKDIR /app
COPY package*.json ./
RUN npm ci --only=production
COPY . .
RUN npm run build

# Production stage
FROM php:8.2-apache
LABEL maintainer="Internet Management System"
LABEL description="Laravel-based Internet Management System"

# Install system dependencies
RUN apt-get update && apt-get install -y \
    git \
    curl \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip \
    supervisor \
    cron \
    && docker-php-ext-install pdo_mysql mbstring exif pcntl bcmath gd zip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Enable Apache mod_rewrite
RUN a2enmod rewrite

# Set working directory
WORKDIR /var/www/html

# Copy composer dependencies
COPY --from=composer-stage /app/vendor ./vendor

# Copy built assets
COPY --from=node-stage /app/public/build ./public/build

# Copy application files
COPY . .

# Copy configurations
COPY docker/apache/000-default.conf /etc/apache2/sites-available/000-default.conf
COPY docker/supervisor/supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY docker/cron/laravel-cron /etc/cron.d/laravel-cron
COPY docker/php/local.ini /usr/local/etc/php/conf.d/local.ini

# Set proper permissions
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html/storage \
    && chmod -R 755 /var/www/html/bootstrap/cache \
    && chmod 0644 /etc/cron.d/laravel-cron

# Generate optimized autoloader
RUN composer dump-autoload --optimize --no-dev

# Create non-root user untuk security
RUN useradd -m -s /bin/bash appuser \
    && usermod -aG www-data appuser

# Expose port 80
EXPOSE 80

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD curl -f http://localhost/ || exit 1

# Start supervisor
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
