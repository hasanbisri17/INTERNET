# Docker Compose untuk VPS Deployment
# Internet Management System

version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: internet_app_prod
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - app_data:/var/www/html/storage
      - app_logs:/var/www/html/storage/logs
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - db
      - redis
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=${APP_URL:-http://localhost}
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-internet_db}
      - DB_USERNAME=${DB_USERNAME:-internet_user}
      - DB_PASSWORD=${DB_PASSWORD:-internet_password}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
    networks:
      - internet_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: mysql:8.0
    container_name: internet_db_prod
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-internet_db}
      MYSQL_USER: ${DB_USERNAME:-internet_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-internet_password}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    ports:
      - "3306:3306"
    networks:
      - internet_network
    command: --default-authentication-plugin=mysql_native_password

  redis:
    image: redis:7-alpine
    container_name: internet_redis_prod
    restart: unless-stopped
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - internet_network
    command: redis-server --appendonly yes

  nginx:
    image: nginx:alpine
    container_name: internet_nginx_prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/sites-available:/etc/nginx/sites-available
      - ./docker/ssl:/etc/nginx/ssl
      - app_data:/var/www/html/storage
    depends_on:
      - app
    networks:
      - internet_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: internet_phpmyadmin_prod
    restart: unless-stopped
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ${DB_USERNAME:-internet_user}
      PMA_PASSWORD: ${DB_PASSWORD:-internet_password}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
    ports:
      - "8080:80"
    depends_on:
      - db
    networks:
      - internet_network

volumes:
  db_data:
    driver: local
  redis_data:
    driver: local
  app_data:
    driver: local
  app_logs:
    driver: local

networks:
  internet_network:
    driver: bridge
